(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))u(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&u(i)}).observe(document,{childList:!0,subtree:!0});function o(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function u(s){if(s.ep)return;s.ep=!0;const r=o(s);fetch(s.href,r)}})();const l=document.querySelector("button"),m=document.querySelector("form"),h=document.querySelector("[type=search]"),a=document.querySelector("div"),f=document.querySelector("span"),n=new Worker(new URL("/sqlite-wiki/assets/worker-678106f4.js",self.location),{type:"module"});n.addEventListener("message",async e=>{if(e.data.ready){localStorage.setItem("sqlite-file-name",e.data.ready),m.disabled=!1,l.hidden=!0;const t=new URL(location.href);t.pathname.length>1?d(t):(f.style.display="inline-block",n.postMessage({searchRandom:!0}))}else if(e.data.showOpenFilePicker)await c();else if(e.data.html){h.value="",f.style.display="none",window.scrollTo(0,0),a.innerHTML=`<h2>${e.data.title}</h2>${e.data.html}`;const t=encodeURIComponent(e.data.title.toLowerCase().replaceAll(/\s/g,"_"));history.pushState(null,"",t)}else e.data.error&&(a.innerHTML=`<pre>${e.data.error}</pre>`)});const c=async()=>{try{const[e]=await showOpenFilePicker({types:[{description:"SQLite files",accept:{"application/vnd.sqlite3":[".sqlite",".sqlite3",".db",".db3",".s3db",".sl3"],"application/x-sqlite3":[".sqlite",".sqlite3",".db",".db3",".s3db",".sl3"]}}]});n.postMessage({handle:e})}catch(e){if(e.name==="SecurityError")l.hidden=!1,l.addEventListener("click",async()=>{await c()});else if(e.name==="AbortError")return;console.error(e.name,e.message)}};m.addEventListener("submit",async e=>{e.preventDefault();let t=h.value.trim();if(t.length){const o=new URL(location.href);o.pathname=t.replaceAll(/\s+/g,"_"),d(o)}});const d=e=>{const t=decodeURIComponent(e.pathname.slice(1).replaceAll(/_/g," "));n.postMessage({search:t})};a.addEventListener("click",e=>{const t=e.target.closest("a");if(t){const o=new URL(t.href);o.origin===location.origin&&(e.preventDefault(),d(o))}});const p=localStorage.getItem("sqlite-file-name");p?n.postMessage({checkIfFileExists:p}):await c();
